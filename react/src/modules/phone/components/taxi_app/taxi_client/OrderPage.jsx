import React, {Component, Fragment} from 'react';
import {connect} from 'react-redux';
import {
    cancelOrderTaxiClient,
    driverReadyTaxiClient,
    playerInTaxiClient,
    setDestinationTaxiClient
} from "../../../actions/action.taxi.client";

class OrderPage extends Component {
    constructor(props) {
        super(props);
        this.state = {};
    }

    // componentDidMount() {
    //     setTimeout(() => {
    //         this.props.taxiReady()
    //     }, 1000);
    //
    //     setTimeout(() => {
    //         this.props.inTaxi()
    //     }, 2000);
    //
    //     setTimeout(() => {
    //         this.props.setDestination('Бертон', 'Карсон-Авеню', 120)
    //     }, 3000);
    // }

    cancelOrder() {
        this.props.cancelOrderTaxi();

        // eslint-disable-next-line no-undef
        mp.trigger('taxi.client.app.cancel');
    }

    render() {
        const { taxi } = this.props;

        return (
            <Fragment>
                <div className='back_taxi-phone-react'></div>
                <div className='logo_taxi-phone-react'>
                    <svg width="45%" height="5%" viewBox="0 0 82 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M6.71181 13.224C5.53848 13.224 4.48248 12.9787 3.54381 12.488C2.61581 11.9867 1.88515 11.2933 1.35181 10.408C0.818479 9.52267 0.551813 8.52 0.551813 7.4C0.551813 6.28 0.818479 5.27733 1.35181 4.392C1.88515 3.50667 2.61581 2.81867 3.54381 2.328C4.48248 1.82667 5.53848 1.576 6.71181 1.576C7.73581 1.576 8.65848 1.75733 9.47981 2.12C10.3011 2.48267 10.9838 3.00533 11.5278 3.688L9.51181 5.512C8.78648 4.63733 7.90648 4.2 6.87181 4.2C6.26381 4.2 5.71981 4.33333 5.23981 4.6C4.77048 4.86667 4.40248 5.24533 4.13581 5.736C3.87981 6.216 3.75181 6.77067 3.75181 7.4C3.75181 8.02933 3.87981 8.58933 4.13581 9.08C4.40248 9.56 4.77048 9.93333 5.23981 10.2C5.71981 10.4667 6.26381 10.6 6.87181 10.6C7.90648 10.6 8.78648 10.1627 9.51181 9.288L11.5278 11.112C10.9838 11.7947 10.3011 12.3173 9.47981 12.68C8.65848 13.0427 7.73581 13.224 6.71181 13.224ZM21.7288 4.328V13H18.8328V12.072C18.5128 12.424 18.1288 12.6907 17.6808 12.872C17.2328 13.0533 16.7581 13.144 16.2568 13.144C15.1368 13.144 14.2408 12.8133 13.5688 12.152C12.9075 11.4907 12.5768 10.4987 12.5768 9.176V4.328H15.6168V8.68C15.6168 9.33067 15.7395 9.80533 15.9848 10.104C16.2301 10.4027 16.5875 10.552 17.0568 10.552C17.5368 10.552 17.9261 10.3867 18.2248 10.056C18.5341 9.71467 18.6888 9.19733 18.6888 8.504V4.328H21.7288ZM29.1429 4.184C29.9323 4.184 30.6469 4.36533 31.2869 4.728C31.9376 5.09067 32.4496 5.61333 32.8229 6.296C33.2069 6.968 33.3989 7.752 33.3989 8.648C33.3989 9.544 33.2069 10.3333 32.8229 11.016C32.4496 11.6987 31.9376 12.2267 31.2869 12.6C30.6469 12.9627 29.9323 13.144 29.1429 13.144C28.0016 13.144 27.1483 12.808 26.5829 12.136V13H23.6869V1.128H26.7269V5.08C27.3136 4.48267 28.1189 4.184 29.1429 4.184ZM28.5029 10.728C29.0363 10.728 29.4736 10.5467 29.8149 10.184C30.1563 9.81067 30.3269 9.29867 30.3269 8.648C30.3269 8.008 30.1563 7.50667 29.8149 7.144C29.4736 6.78133 29.0363 6.6 28.5029 6.6C27.9696 6.6 27.5323 6.78133 27.1909 7.144C26.8496 7.50667 26.6789 8.008 26.6789 8.648C26.6789 9.29867 26.8496 9.81067 27.1909 10.184C27.5323 10.5467 27.9696 10.728 28.5029 10.728ZM43.6759 8.68C43.6759 8.70133 43.6599 8.952 43.6279 9.432H37.3239C37.4519 9.88 37.6973 10.2267 38.0599 10.472C38.4333 10.7067 38.8973 10.824 39.4519 10.824C39.8679 10.824 40.2253 10.7653 40.5239 10.648C40.8333 10.5307 41.1426 10.3387 41.4519 10.072L43.0519 11.736C42.2093 12.6747 40.9773 13.144 39.3559 13.144C38.3426 13.144 37.4519 12.952 36.6839 12.568C35.9159 12.184 35.3186 11.6507 34.8919 10.968C34.4759 10.2853 34.2679 9.512 34.2679 8.648C34.2679 7.79467 34.4706 7.032 34.8759 6.36C35.2919 5.67733 35.8626 5.144 36.5879 4.76C37.3133 4.376 38.1293 4.184 39.0359 4.184C39.8999 4.184 40.6839 4.36533 41.3879 4.728C42.0919 5.08 42.6466 5.59733 43.0519 6.28C43.4679 6.952 43.6759 7.752 43.6759 8.68ZM39.0519 6.344C38.5826 6.344 38.1879 6.47733 37.8679 6.744C37.5586 7.01067 37.3613 7.37333 37.2759 7.832H40.8279C40.7426 7.37333 40.5399 7.01067 40.2199 6.744C39.9106 6.47733 39.5213 6.344 39.0519 6.344ZM47.9736 5.368C48.2829 4.97333 48.6829 4.68 49.1736 4.488C49.6749 4.28533 50.2456 4.184 50.8856 4.184V6.92C50.6082 6.888 50.3789 6.872 50.1976 6.872C49.5469 6.872 49.0349 7.048 48.6616 7.4C48.2989 7.752 48.1176 8.29067 48.1176 9.016V13H45.0776V4.328H47.9736V5.368Z" fill="white"/>
                        <path d="M55.0993 3.192H51.2593V1.8H60.5233V3.192H56.6833V13H55.0993V3.192ZM64.6768 4.44C65.8501 4.44 66.7461 4.728 67.3648 5.304C67.9941 5.88 68.3088 6.73867 68.3088 7.88V13H66.8528V11.88C66.5968 12.2747 66.2288 12.5787 65.7488 12.792C65.2795 12.9947 64.7195 13.096 64.0688 13.096C63.1195 13.096 62.3568 12.8667 61.7808 12.408C61.2155 11.9493 60.9328 11.3467 60.9328 10.6C60.9328 9.85333 61.2048 9.256 61.7488 8.808C62.2928 8.34933 63.1568 8.12 64.3408 8.12H66.7728V7.816C66.7728 7.15467 66.5808 6.648 66.1968 6.296C65.8128 5.944 65.2475 5.768 64.5008 5.768C63.9995 5.768 63.5088 5.85333 63.0288 6.024C62.5488 6.184 62.1435 6.40267 61.8128 6.68L61.1728 5.528C61.6101 5.176 62.1328 4.90933 62.7408 4.728C63.3488 4.536 63.9941 4.44 64.6768 4.44ZM64.3248 11.912C64.9115 11.912 65.4181 11.784 65.8448 11.528C66.2715 11.2613 66.5808 10.888 66.7728 10.408V9.224H64.4048C63.1035 9.224 62.4528 9.66133 62.4528 10.536C62.4528 10.9627 62.6181 11.2987 62.9488 11.544C63.2795 11.7893 63.7381 11.912 64.3248 11.912ZM76.5593 13L74.1113 9.752L71.6313 13H69.9193L73.2633 8.664L70.0793 4.52H71.7913L74.1273 7.576L76.4473 4.52H78.1273L74.9273 8.664L78.3033 13H76.5593ZM79.9794 4.52H81.5154V13H79.9794V4.52ZM80.7474 2.888C80.4488 2.888 80.1981 2.792 79.9954 2.6C79.8034 2.408 79.7074 2.17333 79.7074 1.896C79.7074 1.61867 79.8034 1.384 79.9954 1.192C80.1981 0.989333 80.4488 0.888 80.7474 0.888C81.0461 0.888 81.2914 0.984 81.4834 1.176C81.6861 1.35733 81.7874 1.58667 81.7874 1.864C81.7874 2.152 81.6861 2.39733 81.4834 2.6C81.2914 2.792 81.0461 2.888 80.7474 2.888Z" fill="#FBD825"/>
                    </svg>
                </div>
                <div className='block_location_taxi-phone-react'>
                    <div className='pointer_taxi-phone-react'>
                        <svg width="100%" height="100%" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg">
                            <path d="M42.117 43.007C41.567 42.94 41.071 43.334 41.007 43.883C40.943 44.432 41.335 44.929 41.883 44.993C52.399 46.231 58 49.567 58 51.5C58 54.214 47.348 58 30 58C12.652 58 2 54.214 2 51.5C2 49.567 7.601 46.231 18.117 44.993C18.665 44.929 19.057 44.431 18.993 43.883C18.928 43.334 18.432 42.938 17.883 43.007C7.354 44.247 0 47.739 0 51.5C0 55.724 10.305 60 30 60C49.695 60 60 55.724 60 51.5C60 47.739 52.646 44.247 42.117 43.007Z" fill="#FBD825"/>
                            <path d="M29.823 54.757L45.164 32.6C50.918 24.929 50.086 12.32 43.383 5.618C39.761 1.995 34.945 0 29.823 0C24.701 0 19.885 1.995 16.263 5.617C9.56003 12.319 8.72803 24.928 14.459 32.569L29.823 54.757ZM30 12C33.86 12 37 15.141 37 19C37 22.859 33.86 26 30 26C26.14 26 23 22.859 23 19C23 15.141 26.14 12 30 12Z" fill="#FBD825"/>
                        </svg>
                    </div>
                    <div className='location_taxi-phone-react'  style={{ width: '80%', marginLeft: '10%' }}>
                        <div style={{ fontSize: '1.2em', color: '#13EC00' }}>Ваш вызов принят!</div>
                        <div style={{ marginTop: '7%' }}>Ожидайте:</div>
                        <div>{ taxi.order.name }</div>
                        <div>на { taxi.order.model } с номером { taxi.order.number }</div>
                    </div>
                </div>

                <div
                    className='search_button_taxi-phone-react'
                    onClick={this.cancelOrder.bind(this)}
                    style={{ color: 'red' }}
                >
                    Отменить вызов
                </div>
            </Fragment>
        );
    }
}

const mapStateToProps = state => ({
    taxi: state.taxiClient
});

const mapDispatchToProps = dispatch => ({
    cancelOrderTaxi: () => dispatch(cancelOrderTaxiClient()),
    taxiReady: () => dispatch(driverReadyTaxiClient()),
    inTaxi: () => dispatch(playerInTaxiClient()),
    setDestination: (area, street, price) => dispatch(setDestinationTaxiClient(area, street, price))
});

export default connect(mapStateToProps, mapDispatchToProps)(OrderPage);